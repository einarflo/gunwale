version: "3.9"

services:
  traefik:
    image: traefik:v2.11
    command:
      - --api.insecure=true
      - --providers.docker=true
      - --entrypoints.web.address=:80
      - --entrypoints.websecure.address=:443
      - --entrypoints.web.http.redirections.entrypoint.to=websecure
      - --entrypoints.web.http.redirections.entrypoint.scheme=https
      - --certificatesresolvers.myresolver.acme.httpchallenge=true
      - --certificatesresolvers.myresolver.acme.httpchallenge.entrypoint=web
      - --certificatesresolvers.myresolver.acme.email=din.epost@domene.no
      - --certificatesresolvers.myresolver.acme.storage=/letsencrypt/acme.json
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./traefik/acme.json:/letsencrypt/acme.json
    networks:
      - app-network

  porthuset:
    image: porthuset-lamp-backup:latest
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.porthuset.rule=Host(`ovh.porthuset.no`)"
      - "traefik.http.routers.porthuset.entrypoints=websecure"
      - "traefik.http.routers.porthuset.tls.certresolver=myresolver"
    volumes:
      - /home/debian/porthuset:/var/www/html
    networks:
      - app-network

  websocket:
    build: ./websocket-api
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.websocket.rule=Host(`ovh.tavl.no`) && PathPrefix(`/ws`)"
      - "traefik.http.routers.websocket.entrypoints=websecure"
      - "traefik.http.routers.websocket.tls.certresolver=myresolver"
      - "traefik.http.services.websocket.loadbalancer.server.port=3000"
      - "traefik.http.routers.websocket.service=websocket"
      - "traefik.http.routers.websocket.middlewares=strip-ws"
      - "traefik.http.middlewares.strip-ws.stripprefix.prefixes=/ws"
    networks:
      - app-network

  frontend:
    build:
      context: ./frontend
      args:
        REACT_APP_WS_URL: wss://ovh.tavl.no
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.frontend.rule=Host(`ovh.tavl.no`)"
      - "traefik.http.routers.frontend.entrypoints=websecure"
      - "traefik.http.routers.frontend.tls.certresolver=myresolver"
      - "traefik.http.services.frontend.loadbalancer.server.port=80"
    depends_on:
      - websocket
    networks:
      - app-network

  keycloak-db:
    image: postgres:15
    environment:
      POSTGRES_DB: keycloak
      POSTGRES_USER: ${KC_DB_USERNAME}
      POSTGRES_PASSWORD: ${KC_DB_PASSWORD}
    volumes:
      - keycloak-db-data:/var/lib/postgresql/data
    networks:
      - app-network

  keycloak:
    image: quay.io/keycloak/keycloak:latest
    command:
      - start --optimized
    environment:
      KC_DB: postgres
      KC_DB_URL: jdbc:postgresql://keycloak-db:5432/keycloak
      KC_DB_USERNAME: ${KC_DB_USERNAME}
      KC_DB_PASSWORD: ${KC_DB_PASSWORD}
      KEYCLOAK_ADMIN: ${KEYCLOAK_ADMIN}
      KEYCLOAK_ADMIN_PASSWORD: ${KEYCLOAK_ADMIN_PASSWORD}
      KC_HOSTNAME: auth.tavl.no
    expose:
      - "8080"
    depends_on:
      - keycloak-db
    networks:
      - app-network

networks:
  app-network:
    driver: bridge

volumes:
  keycloak-db-data:
